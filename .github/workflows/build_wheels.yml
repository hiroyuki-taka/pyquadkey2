name: Build wheels
on: [ push, pull_request ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        env:
          CIBW_BUILD: cp313-* cp312-* cp311-* cp310-*
          CIBW_SKIP: pp* *-win32 *_i686
          CIBW_BEFORE_BUILD: >
            python -m pip install --upgrade pip
            && pip install -r requirements.txt
            && cd src/pyquadkey2/quadkey/tilesystem
            && python setup.py build_ext --inplace
        run: |
          pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build sdist
        run: |
          python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz


  create_release:
    name: Build
    needs: [ build_wheels, build_sdist ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: 0.3.2
          draft: false
          prerelease: false
          files: |
            dist/*.whl
            dist/*.tar.gz

  create_pages:
    name: Create Pages
    needs: [ build_wheels, build_sdist ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: create PyPI index
        run: |
          for file in dist/*; do
            echo -e "{\"filename\": \"$(basename $file)\", \"hash\": \"sha256=$(sha256sum $file | awk '{print $1}')\"}" >> package-list.json
          done
          cat package-list.json
          pipx run dumb-pypi --package-list-json package-list.json \
            --packages-url $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/${{ github.ref_name }}/ \
            --output-dir data

      - uses: actions/upload-pages-artifact@v3
        with:
          path: data

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
